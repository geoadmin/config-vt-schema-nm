name: SwissTopo CI - generate mbtiles

on:
  release:
    types: [ released ]
    branches:
      - master
      - PROD
  workflow_dispatch:

jobs:
  build:
    runs-on: release-workflow
    env:
      MAPTILER_LICENSE: ${{ secrets.MAPTILER_LICENSE }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TAG_NAME: ${{ github.event.release.tag_name }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      MAPTILER_API_KEY: ${{ secrets.MAPTILER_API_KEY }}
      PG_PASSWORD: ${{ secrets.PG_PASSWORD }}
    steps:
    - name: Get code
      uses: actions/checkout@v2
      with:
        # Fetch the last two commits in case this is a PR,
        # and we need to profile the base branch first
        fetch-depth: 2
        path: code

    - name: Set premission
      run: |
        sudo chown -R admin:admin code

    - name: Generate tiles
      run: |
        cd code
        make generate-tiles-pg

    - name: Add tag name to mbtiles name
      run: |
        sqlite3 ./code/data/ch.swisstopo.orthophoto-overlay.mbtiles \
        "UPDATE metadata SET value='OrthophotoOverlay_${TAG_NAME}' WHERE name='name';"
        sqlite3 ./code/data/ch.swisstopo.orthophoto-overlay.mbtiles \
        "UPDATE metadata SET value='${TAG_NAME}' WHERE name='version';"
        
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./code/data/ch.swisstopo.orthophoto-overlay.mbtiles
        asset_name: ch.swisstopo.orthophoto-overlay.mbtiles
        asset_content_type: application/x-sqlite3

    - name: Upload mbtiles to SwissTopo Cloud
      run: |
        /mnt/lssd/venv/bin/maptiler tiles upload code/data/ch.swisstopo.orthophoto-overlay.mbtiles
